name: Development

on:
  push:
    branches: ['main', 'dev']
  pull_request:
    branches: ['main', 'dev']

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    container: denoland/deno:1.10.3

    # Service containers to run with the job
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Setup repo
        uses: actions/checkout@v3
      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x
      - name: Verify formatting
        run: deno fmt --check
      - name: Run model method unit tests
        run: deno test -A --no-check ./Test/model_test.ts
      # - name: Run model method integration tests
      #   env:
      #     TEST_DB_URI: ${{ secrets.TEST_DB_URI }}
      #     ENVIRONMENT: test
      #   run: deno test -A --no-check ./Test/model_integration_tests/
      - name: Connect to PostgreSQL
        # Runs a script that creates a PostgreSQL table, populates
        # the table with data, and then retrieves the data.
        run: node client.js
        # Environment variables used by the `client.js` script to create a new PostgreSQL table.
        env:
          # The hostname used to communicate with the PostgreSQL service container
          POSTGRES_HOST: postgres
          # The default PostgreSQL port
          POSTGRES_PORT: 5432
      - name: Run model method integration tests
        run: deno test -A --no-check ./Test/model_integration_tests/
